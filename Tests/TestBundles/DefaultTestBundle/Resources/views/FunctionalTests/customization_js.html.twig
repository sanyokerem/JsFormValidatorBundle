{% extends 'DefaultTestBundle::layout.html.twig' %}

{% block jquery %}{% endblock %}

{% block body %}
    <div id="on_validate_msg_container"></div>
    {{ form(form) }}

    <script type="text/javascript">
        var field = document.getElementById('customization_disabled');
        FpJsFormValidator.customize(field, {
            disabled: true
        });

        field = document.getElementById('customization_showErrors');
        FpJsFormValidator.customize(field, {
            showErrors: function(errors, type) {
                if (!(this instanceof HTMLElement)) {
                    return;
                }
                //noinspection JSValidateTypes
                /**
                 * @type {HTMLElement}
                 */
                var domNode = this;
                var ul = FpJsFormValidator.getDefaultErrorContainerNode(domNode);
                if (ul) {
                    var len = ul.childNodes.length;
                    while (len--) {
                        if (type == ul.childNodes[len].className) {
                            ul.removeChild(ul.childNodes[len]);
                        }
                    }
                }

                if (!errors.length) {
                    if (ul && !ul.childNodes) {
                        ul.parentNode.removeChild(ul);
                    }
                    return;
                }

                if (!ul) {
                    ul = document.createElement('ul');
                    ul.className = FpJsFormValidator.errorClass;
                    domNode.parentNode.insertBefore(ul, domNode);
                }

                var li;
                for (var i in errors) {
                    li = document.createElement('li');
                    li.className = type;
                    li.innerHTML = 'custom_' + errors[i];
                    ul.appendChild(li);
                }
            }
        });

        var form = document.getElementsByTagName('form')[0];
        FpJsFormValidator.customize(form, {
            groups: function () {
                return ['groups_callback'];
            },
            onValidate: function(errors, event) {
                var arrErrors = [];
                for (var elId in errors) {
                    for (var sourceId in errors[elId]) {
                        var _err = errors[elId][sourceId];
                        if ('customization_showErrors' == elId) {
                            for (var i in _err) {
                                _err[i] = 'custom_'+ errors[elId][sourceId][i];
                            }
                        }
                        arrErrors = arrErrors.concat(_err);
                    }
                }
                var container = document.getElementById('on_validate_msg_container');
                container.innerHTML = arrErrors.join(', ');
            },
            callbacks: {
                'isPasswordLegal': function() {
                    return false;
                },
                'validateCallback': function() {
                    var email = document.getElementById('customization_email');
                    FpJsFormValidator.customize(email, 'showErrors', {
                        errors: ['validate_callback_email_custom'],
                        sourceId: 'validate-callback'
                    });
                },
                'ownCallback': function() {
                    var email = document.getElementById('customization_email');
                    FpJsFormValidator.customize(email, 'showErrors', {
                        errors: ['own_callback_email_custom'],
                        sourceId: 'validate-callback-own'
                    });
                },
                'Fp\\JsFormValidatorBundle\\Tests\\TestBundles\\DefaultTestBundle\\Validator\\ExternalValidator': {
                    validateStaticCallback: function () {
                        var email = document.getElementById('customization_email');
                        FpJsFormValidator.customize(email, 'showErrors', {
                            errors: ['static_callback_email_custom'],
                            sourceId: 'static-validate-callback'
                        });
                    }
                },
                'validateDirectStaticCallback': function() {
                    var email = document.getElementById('customization_email');
                    FpJsFormValidator.customize(email, 'showErrors', {
                        errors: ['direct_static_callback_email_custom'],
                        sourceId: 'direct-static-validate-callback'
                    });
                },
                'isValidChoicesList': function () {
                    return 'September';
                },
                'getChoicesList': function () {
                    return ['June', 'July', 'August'];
                }
            }
        });
    </script>
{% endblock %}